@prefix dc:    <http://purl.org/dc/elements/1.1/> .
@prefix legal: <http://www.linked-usdl.org/ns/usdl-legal#> .
@prefix :      <http://rdfs.genssiz.org/serviceSet#> .
@prefix heroku: <http://rdfs.genssiz.org/heroku#> .
@prefix foaf:  <http://xmlns.com/foaf/0.1/> .
@prefix sp:    <http://spinrdf.org/sp#> .
@prefix vann:  <http://purl.org/vocab/vann/> .
@prefix heroku_vocabulary: <http://tutorial.topbraid.com/heroku_vocabulary#> .
@prefix org:   <http://www.w3.org/ns/org#> .
@prefix rdfs:  <http://www.w3.org/2000/01/rdf-schema#> .
@prefix price: <http://www.linked-usdl.org/ns/usdl-price#> .
@prefix spl:   <http://spinrdf.org/spl#>> .
@prefix usdl:  <http://www.linked-usdl.org/ns/usdl-core#> .
@prefix xsd:   <http://www.w3.org/2001/XMLSchema#> .
@prefix owl:   <http://www.w3.org/2002/07/owl#> .
@prefix rdf:   <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix cloud: <http://rdfs.genssiz.org/CloudTaxonomy#> .
@prefix spin:  <http://spinrdf.org/spin#> .
@prefix gr:    <http://purl.org/goodrelations/v1#> .
@prefix skos:  <http://www.w3.org/2004/02/skos/core#> .

<http://tutorial.topbraid.com/heroku_vocabulary>
        a                owl:Ontology ;
        <http://purl.org/dc/terms/contributor>
                [ a               foaf:Person ;
                  foaf:firstName  "Jorge" ;
                  foaf:lastName   "Araújo" ;
                  foaf:name       "Jorge Araújo"
                ] ;
        <http://purl.org/dc/terms/created>
                "2013-03-05"^^xsd:date ;
        <http://purl.org/dc/terms/description>
                "Heroku Vocabulary" ;
        <http://purl.org/dc/terms/modified>
                "2013-03-27"^^xsd:date ;
        <http://purl.org/dc/terms/title>
                "Heroku Vocabulary" ;
        owl:imports      <http://rdfs.genssiz.org/CloudTaxonomy> ;
        owl:versionInfo  "Created with TopBraid Composer"^^xsd:string .

heroku:Service_Heroku_Ika_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku Ika Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Ika_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku:Function_Free_Dyno_Usage
        a                  spin:Function ;
        rdfs:label         "Free Dyno Usage Function"^^xsd:string ;
        rdfs:subClassOf    spin:Functions ;
        spin:body          [ a                   sp:Select ;
                             sp:resultVariables  ( [ sp:varName  "price"^^xsd:string ] ) ;
                             sp:where            ( [ sp:object     [ sp:varName  "a"^^xsd:string ] ;
                                                     sp:predicate  price:hasValue ;
                                                     sp:subject    heroku:Variable_Dyno_Hour_Cost
                                                   ] [ sp:object     [ sp:varName  "hourPrice"^^xsd:string ] ;
                                                       sp:predicate  gr:hasValue ;
                                                       sp:subject    [ sp:varName  "a"^^xsd:string ]
                                                     ] [ sp:object     [ sp:varName  "b"^^xsd:string ] ;
                                                         sp:predicate  price:hasValue ;
                                                         sp:subject    heroku:Variable_Free_Hours
                                                       ] [ sp:object     [ sp:varName  "hours"^^xsd:string ] ;
                                                           sp:predicate  gr:hasValue ;
                                                           sp:subject    [ sp:varName  "b"^^xsd:string ]
                                                         ] [ a              sp:Bind ;
                                                             sp:expression  [ a        sp:mul ;
                                                                              sp:arg1  [ sp:varName  "hours"^^xsd:string ] ;
                                                                              sp:arg2  [ sp:varName  "hourPrice"^^xsd:string ]
                                                                            ] ;
                                                             sp:variable    [ sp:varName  "price"^^xsd:string ]
                                                           ] )
                           ] ;
        price:hasVariable  heroku:Variable_Free_Hours , heroku:Variable_Dyno_Hour_Cost .

heroku:Service_Heroku_Mecha_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku Mecha Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:qualitativeProductOrServiceProperty
                cloud:Redundancy ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Mecha_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku:resource_Heroku_Ronin_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "E34"^^xsd:string ;
        gr:hasValue              "1.7"^^xsd:float .

heroku:resource_Heroku_Database_Availability
        a            cloud:Availability , gr:QuantitativeValue ;
        gr:hasValue  "99.95"^^xsd:float .

heroku:PricePlan_Heroku_Kappa_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Kappa_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku:PaaS  a  skos:Concept , rdfs:Class ;
        <http://purl.org/dc/terms/description>
                "Service model to all PaaS like services" .

heroku_vocabulary:Fork
        a                skos:Concept , rdfs:Class , cloud:Replication ;
        rdfs:label       "Forking a database is just like forking source code. It creates a perfect, byte-for-byte clone of your database with a single command. Do you have new schema migrations that you need to test? Simply fork your production database and run the new migrations against the fork. Load testing? Fork your database and run your testing environment against it. Forking databases lets you work with your production schema and data without risk or hassle. And when you are done, simply throw the fork away."^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Fork"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:resource_Heroku_Zilla_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "E34"^^xsd:string ;
        gr:hasValue              "17"^^xsd:float .

heroku:Variable_Worker_Dynos_Hours
        a           price:Usage ;
        rdfs:label  "Worker Dynos"^^xsd:string .

heroku:Offering_Heroku_Baku_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Baku Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Baku_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Baku_Database .

heroku:resource_Heroku_Crane_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "4L"^^xsd:string ;
        gr:hasValue              "0.39"^^xsd:float .

heroku:PriceComponent_Kappa_Database
        a               price:PriceComponent ;
        rdfs:label      "Kappa Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "100"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:resource_Heroku_Baku_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "E34"^^xsd:string ;
        gr:hasValue              "34"^^xsd:float .

<http://rdfs.genssiz.org/heroku>
        a                owl:Ontology ;
        rdfs:label       "Heroku service descriptions" ;
        <http://purl.org/dc/terms/contributor>
                [ a               foaf:Person ;
                  foaf:firstName  "Jorge" ;
                  foaf:lastName   "Araújo" ;
                  foaf:name       "Jorge Araújo"
                ] ;
        <http://purl.org/dc/terms/created>
                "2013-02-18"^^xsd:date ;
        <http://purl.org/dc/terms/description>
                "Heroku description example" ;
        <http://purl.org/dc/terms/modified>
                "2013-03-27"^^xsd:date ;
        <http://purl.org/dc/terms/title>
                "Heroku description example" ;
        owl:imports      <file:///HerokuPricing/GoodRelations_v1.owl> , <http://tutorial.topbraid.com/heroku_vocabulary> , <http://www.linked-usdl.org/ns/usdl-core> , <http://www.linked-usdl.org/ns/usdl-price> , <http://spinrdf.org/spin> , <http://rdfs.genssiz.org/CloudTaxonomy> ;
        owl:versionInfo  "Created with TopBraid Composer"^^xsd:string .

heroku_vocabulary:Follow
        a                skos:Concept , rdfs:Class , cloud:Replication ;
        rdfs:label       "Followers are read-only asynchronous replicas of a database. Followers stay up-to-date with changes to your database and can be queried. Traditionally, setting-up and maintaining replication is a difficult and specialized task. But with followers, it just works. Followers provide horizontal scalability by distributing database read traffic. They are also perfect for real-time analytics  use them to make expensive queries against up-to-date data without affecting application speed and availability."^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Follow"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku_vocabulary:Cache
        a                rdfs:Class , skos:Concept ;
        rdfs:label       "Cache"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Cache"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku:resource_Heroku_Mecha_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "E34"^^xsd:string ;
        gr:hasValue              "68"^^xsd:float .

heroku:PricePlan_Heroku_Mecha_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:Deduction_1_1 , heroku:Deduction_1 , heroku:PriceComponent_Mecha_Database_1 , heroku:PriceComponent_Mecha_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku:PriceComponent_Mecha_Database_1
        a               price:PriceComponent ;
        rdfs:label      "Mecha Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "1000"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:provider_Heroku
        a              gr:BusinessEntity ;
        foaf:homepage  <http://www.heroku.com> ;
        foaf:name      "Heroku Inc" .

heroku:PricePlan_Heroku_Ika_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Ika_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku:Legal_Heroku  a   legal:TermsAndConditions ;
        <http://purl.org/dc/terms/description>
                "Heroku legal statements are accessible at 'https://policy.heroku.com/'. Please consult this website for further information"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku legal statements"@en ;
        legal:hasClause  [ a           legal:Clause ;
                           legal:name  "Customer Promises" ;
                           legal:text  "https://policy.heroku.com/promise"@en
                         ] ;
        legal:hasClause  [ a           legal:Clause ;
                           legal:name  "Heroku Security" ;
                           legal:text  "https://policy.heroku.com/security"@en
                         ] ;
        legal:hasClause  [ a           legal:Clause ;
                           legal:name  "Privacy Policy" ;
                           legal:text  "https://policy.heroku.com/privacy"@en
                         ] ;
        legal:hasClause  [ a           legal:Clause ;
                           legal:name  "Acceptable Use Policy" ;
                           legal:text  "https://policy.heroku.com/aup"@en
                         ] ;
        legal:hasClause  [ a           legal:Clause ;
                           legal:name  "DMCA Notice" ;
                           legal:text  "https://policy.heroku.com/dmca"@en
                         ] ;
        legal:hasClause  [ a           legal:Clause ;
                           legal:name  "Support Policy" ;
                           legal:text  "https://policy.heroku.com/aup"@en
                         ] ;
        legal:hasClause  [ a           legal:Clause ;
                           legal:name  "Terms of Service" ;
                           legal:text  "https://policy.heroku.com/tos"@en
                         ] .

heroku_vocabulary:Configuration_Strings
        a                skos:Concept , rdfs:Class , cloud:CommandLine ;
        rdfs:label       "Connecting an application to Heroku Postgres is simple. The service automatically generates configuration and connection strings for databases for a variety of languages, command line tools, and application frameworks. There include PSQL, pg_restore, Ruby on Rails (ActiveRecord), Ruby Sequel, Ruby Datamapper, PHP, Django, and JDBC."^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Automatic_Health_Checks"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:resource_Heroku_Database_Disk_Storage
        a                        cloud:StorageCapacity ;
        gr:hasUnitOfMeasurement  "E34"^^xsd:string ;
        gr:hasValue              "1024"^^xsd:float .

heroku_vocabulary:Dyno
        a                      skos:Concept , rdfs:Class ;
        rdfs:label             "Dyno"^^xsd:string ;
        rdfs:subClassOf        gr:QualitativeValue ;
        gr:hasMaxValueInteger  24 ;
        gr:hasMinValueInteger  0 ;
        skos:broader           heroku_vocabulary:heroku_concepts ;
        skos:narrower          heroku_vocabulary:Worker_Dyno , heroku_vocabulary:Web_Dyno .

heroku:Service_Heroku_Crane_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku Crane Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Crane_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku:PriceComponent_Fugu_Database
        a               price:PriceComponent ;
        rdfs:label      "Fugu Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "400"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:Offering_Heroku_Ronin_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Ronin Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Ronin_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Ronin_Database .

heroku:PriceComponent_Ika_Database
        a               price:PriceComponent ;
        rdfs:label      "Ika Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "800"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku_vocabulary:Technical_Support
        a                skos:Concept , rdfs:Class , cloud:SupportTeam , cloud:Support_24_7 ;
        rdfs:label       "Technical Support"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Technical_Support"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku:Variable_Dyno_Hour_Cost
        a               price:Constant ;
        rdfs:label      "Dyno Hour Cost"^^xsd:string ;
        price:hasValue  [ a                        gr:QuantitativeValue ;
                          gr:hasUnitOfMeasurement  "HUR" ;
                          gr:hasValue              "0.05"^^xsd:float
                        ] .

heroku:Service_Heroku_Kappa_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku Kappa Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Kappa_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku_vocabulary:Continuos_Protection
        a                skos:Concept , rdfs:Class , cloud:Durability , cloud:Backup_Recovery ;
        rdfs:label       "Continuous Protection keeps data safe on Heroku Postgres. Every change to your data is written to write-ahead logs, which are shipped to multi-datacenter, high-durability storage. In the unlikely event of unrecoverable hardware failure, these logs can be automatically 'replayed' to recover the database to within seconds of its last known state."^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Continuos_Protection"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:resource_Heroku_Kappa_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "4L"^^xsd:string ;
        gr:hasValue              "0.781"^^xsd:float .

heroku_vocabulary:General_Concepts
        a                rdfs:Class , skos:Concept ;
        rdfs:label       "general concepts for the heroku service"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        skos:broader     heroku_vocabulary:heroku_concepts ;
        skos:narrower    heroku_vocabulary:Instant_Deployment_And_Scalling , heroku_vocabulary:Secure_Hardened_and_Tuned_Runtime , heroku_vocabulary:Complete_API_CLI_for_App_Management , heroku_vocabulary:Open_and_Standard_Stacks_No_Lock-in , heroku_vocabulary:Platform-Wide_Monitoring_24x7 , heroku_vocabulary:Fast_And_Fault-Tolerant_HTTP_Routing , heroku_vocabulary:Technical_Support .

heroku:PriceComponent_Free_Dyno_Usage
        a                       price:Deduction ;
        rdfs:label              "Free Dyno Usage"^^xsd:string ;
        price:hasPriceFunction  heroku:Function_Free_Dyno_Usage ;
        price:hasTextFuntion    "Number of free hours per month * dyno hour cost"^^xsd:string .

heroku_vocabulary:Addons
        a                cloud:Feature , skos:Concept , rdfs:Class ;
        rdfs:label       "Addons"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Addons"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku:resource_Heroku_Fugu_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "E34"^^xsd:string ;
        gr:hasValue              "3.75"^^xsd:float .

heroku_vocabulary:Open_and_Standard_Stacks_No_Lock-in
        a                skos:Concept , rdfs:Class , cloud:OpenSource ;
        rdfs:label       "No data lock-in, the service is based in open standards"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Open_and_Standard_Stacks_No_Lock-in"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku:resource_Heroku_Ika_Cache
        a                        cloud:CacheSize , gr:QuantitativeValue ;
        gr:hasUnitOfMeasurement  "E34"^^xsd:string ;
        gr:hasValue              "7.5"^^xsd:float .

heroku:resource_Heroku_Dynos_Availability
        a            cloud:Availability , gr:QuantitativeValue ;
        gr:hasValue  "99.95"^^xsd:float .

heroku:Variable_Web_Dynos_Hours
        a           price:Usage ;
        rdfs:label  "Web Dynos"^^xsd:string .

heroku:Function_Dynos
        a                  spin:Function ;
        rdfs:label         "Dynos Function"^^xsd:string ;
        rdfs:subClassOf    spin:Functions ;
        spin:body          [ a                   sp:Select ;
                             sp:resultVariables  ( [ sp:varName  "price"^^xsd:string ] ) ;
                             sp:where            ( [ sp:object     [ sp:varName  "a"^^xsd:string ] ;
                                                     sp:predicate  price:hasValue ;
                                                     sp:subject    heroku:Variable_Dyno_Hour_Cost
                                                   ] [ sp:object     [ sp:varName  "cost"^^xsd:string ] ;
                                                       sp:predicate  gr:hasValue ;
                                                       sp:subject    [ sp:varName  "a"^^xsd:string ]
                                                     ] [ sp:object     [ sp:varName  "b"^^xsd:string ] ;
                                                         sp:predicate  price:hasValue ;
                                                         sp:subject    heroku:Variable_Web_Dynos_Hours
                                                       ] [ sp:object     [ sp:varName  "web_hours"^^xsd:string ] ;
                                                           sp:predicate  gr:hasValue ;
                                                           sp:subject    [ sp:varName  "b"^^xsd:string ]
                                                         ] [ sp:object     [ sp:varName  "c"^^xsd:string ] ;
                                                             sp:predicate  price:hasValue ;
                                                             sp:subject    heroku:Variable_Web_Dynos_Hours
                                                           ] [ sp:object     [ sp:varName  "worker_hours"^^xsd:string ] ;
                                                               sp:predicate  gr:hasValue ;
                                                               sp:subject    [ sp:varName  "c"^^xsd:string ]
                                                             ] [ a              sp:Bind ;
                                                                 sp:expression  [ a        sp:mul ;
                                                                                  sp:arg1  [ a        sp:add ;
                                                                                             sp:arg1  [ sp:varName  "web_hours"^^xsd:string ] ;
                                                                                             sp:arg2  [ sp:varName  "worker_hours"^^xsd:string ]
                                                                                           ] ;
                                                                                  sp:arg2  [ sp:varName  "cost"^^xsd:string ]
                                                                                ] ;
                                                                 sp:variable    [ sp:varName  "price"^^xsd:string ]
                                                               ] )
                           ] ;
        price:hasVariable  heroku:Variable_Worker_Dynos_Hours , heroku:Variable_Web_Dynos_Hours , heroku:Variable_Dyno_Hour_Cost .

heroku:PricePlan_Heroku_Baku_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Baku_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku:Service_Heroku_Baku_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku BAKU Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Baku_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku_vocabulary:Complete_API_CLI_for_App_Management
        a                skos:Concept , rdfs:Class , cloud:API ;
        rdfs:label       "It is possible to control and manage the app with an API or command line instructions"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Complete API CLI for App Management"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku_vocabulary:Rows
        a                skos:Concept , rdfs:Class ;
        rdfs:label       "Database Rows"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku:PriceComponent_Dynos
        a                       price:PriceComponent ;
        rdfs:label              "Dynos"^^xsd:string ;
        price:hasPriceFunction  heroku:Function_Dynos ;
        price:hasTextFuntion    "Number of web dynos Hours used + number of worker dynos hours used * price per hour"^^xsd:string .

heroku:Offering_Heroku_Dynos
        a                   usdl:ServiceOffering ;
        rdfs:label          "offering Heroku Dynos"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku dynos."@en ;
        <http://purl.org/dc/terms/title>
                "Heroku Dynos"@en ;
        usdl:includes       heroku:ServiceModel_Heroku_Dynos ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Dynos .

heroku:ServiceModel_Heroku_Databases
        a           usdl:ServiceModel ;
        rdfs:label  "Service model Heroku Databases"^^xsd:string ;
        gr:qualitativeProductOrServiceProperty
                heroku_vocabulary:Direct_Psql_Access , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:Production_Database , heroku_vocabulary:Configuration_Strings , heroku_vocabulary:Follow , heroku_vocabulary:Multi_Ingress , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Fork , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Data_Clips ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Database_Disk_Storage , heroku:resource_Heroku_Database_Availability .

heroku:Offering_Heroku_Zilla_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Zilla Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Zilla_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Zilla_Database .

heroku:PriceComponent_Ronin_Database
        a               price:PriceComponent ;
        rdfs:label      "Ronin Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "200"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:Variable_Free_Hours
        a               price:Constant ;
        rdfs:label      "Free Hours"^^xsd:string ;
        price:hasValue  [ a            gr:QuantitativeValue ;
                          gr:hasValue  750
                        ] .

heroku:Offering_Heroku_Ika_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Ika Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Ika_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Ika_Database .

heroku_vocabulary:PostgreSQL
        a                cloud:Platform , skos:Concept , rdfs:Class ;
        rdfs:label       "OpenSource database"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "PostgreSQL"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:Deduction_1_1  a  price:Deduction ;
        rdfs:label      "Deduction 1"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "200"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku_vocabulary:Platform-Wide_Monitoring_24x7
        a                rdfs:Class , skos:Concept , cloud:Monitoring ;
        rdfs:label       "monitoring everytime"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Platform-Wide_Monitoring_24x7"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku:PricePlan_Heroku_Zilla_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Zilla_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku_vocabulary:Disk_Storage
        a                cloud:StorageCapacity , skos:Concept , rdfs:Class ;
        rdfs:label       "Disk Storage"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku_vocabulary:heroku_concepts
        a                  skos:ConceptScheme , rdfs:Class ;
        <http://purl.org/dc/terms/contributor>
                [ a               foaf:Person ;
                  foaf:firstName  "Jorge" ;
                  foaf:lastName   "Araújo" ;
                  foaf:name       "Jorge Araújo"
                ] ;
        <http://purl.org/dc/terms/created>
                "2013-01-18"^^xsd:date ;
        <http://purl.org/dc/terms/modified>
                "2013-02-11"^^xsd:date ;
        owl:versionInfo    "001" ;
        skos:altLabel      "General vocabulary"@en ;
        skos:definition    "Specification of the vocabulary for Heroku cloud services." ;
        skos:prefLabel     "General service resource/property vocabulary for Heroku services"@en ;
        skos:topConceptOf  heroku_vocabulary:Rows , heroku_vocabulary:General_Concepts , heroku_vocabulary:Addons , heroku_vocabulary:Dyno , heroku_vocabulary:Database , heroku_vocabulary:Disk_Storage , heroku_vocabulary:Cache .

heroku:Service_Heroku_Zilla_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku Zilla Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Zilla_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku_vocabulary:Fast_And_Fault-Tolerant_HTTP_Routing
        a                skos:Concept , rdfs:Class , cloud:NetworkFunctionalProperty ;
        rdfs:label       "the HTTP routing is fault tolerant"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Fast_And_Fault-Tolerant_HTTP_Routing"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku_vocabulary:Worker_Dyno
        a                skos:Concept , rdfs:Class , cloud:ComputingInstance ;
        rdfs:label       "Worker Dyno"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Worker Dyno"^^xsd:string ;
        skos:broader     heroku_vocabulary:Dyno .

heroku:PriceComponent_Crane_Database
        a               price:PriceComponent ;
        rdfs:label      "Crane Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "50"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku_vocabulary:Data_Clips
        a                skos:Concept , rdfs:Class , cloud:Interface ;
        rdfs:label       "When we share information on the Internet, we do so by sharing URLs. We send URLs for locations, books, videos, and even source code. Until now there hasnt been a convenient way to share data inside a database. Dataclips is that mechanism to easily share data within your organization. Dataclips are available on all Heroku Postgres dedicated and starter databases. Use standard SQL to create data clips.No authentication required for easy sharing. Data clips are protected via a 128-bit URL hash. Query your database within a read-only transaction, so your data is safe from alteration. Downloadable in many formats including JSON, Excel, CSV, YAML. Easily exportable to Google spreadsheets."^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Data_Clips"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:PricePlan_Heroku_Dynos
        a                        price:PricePlan ;
        rdfs:label               "Heroku Dynos Price Plan"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Free_Dyno_Usage , heroku:PriceComponent_Dynos ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku:PricePlan_Heroku_Fugu_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Fugu_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku:PriceComponent_Baku_Database
        a               price:PriceComponent ;
        rdfs:label      "Baku Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "3200"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:Offering_Heroku_Mecha_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Mecha Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Mecha_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Mecha_Database .

heroku_vocabulary:Automatic_Health_Checks
        a                skos:Concept , rdfs:Class , cloud:Reliability , cloud:Backup_Recovery ;
        rdfs:label       "PAround the clock, Heroku Postgres performs a battery of health checks on every database in operation. These checks ensure that the database is online and working properly. You can sleep well, knowing that if a problem is detected, our 24/7 on-call team is immediately dispatched and our automated recovery software can have you back online in minutes, even in the event of catastrophic hardware failure."^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Automatic_Health_Checks"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:PriceComponent_Zilla_Database
        a               price:PriceComponent ;
        rdfs:label      "Zilla Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "1600"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:Service_Heroku_Ronin_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku Ronin Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Ronin_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku:Service_Heroku_Fugu_Databases
        a                       usdl:Service ;
        rdfs:label              "Service Heroku Fugu Databases"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku  - Cloud Databases"@en ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Fugu_Cache ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku ;
        usdl:hasServiceModel    heroku:ServiceModel_Heroku_Databases .

heroku_vocabulary:Multi_Ingress
        a                cloud:Platform , skos:Concept , rdfs:Class ;
        rdfs:label       "Databases on Heroku Postgres can be used from anywhere and with any Postgres client. Apps can connect to Heroku Postgres from Heroku, Google App Engine, Microsoft Azure, Cloud Foundry, EC2, or from your local computer. PostgreSQL is supported by most modern programming languages - including Perl, Python, Ruby, Scala, Go, Tcl, C/C++, Java, .Net, and Javascript. It is even available via ODBC."^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Multi_Ingress"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku_vocabulary:Web_Dyno
        a                skos:Concept , rdfs:Class , cloud:ComputingInstance ;
        rdfs:label       "Web Dyno"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Web Dyno"^^xsd:string ;
        skos:broader     heroku_vocabulary:Dyno .

heroku_vocabulary:Database
        a                skos:Concept , rdfs:Class ;
        rdfs:label       "Database"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        skos:broader     heroku_vocabulary:heroku_concepts ;
        skos:narrower    heroku_vocabulary:Configuration_Strings , heroku_vocabulary:Fork , heroku_vocabulary:Continuos_Protection , heroku_vocabulary:direct_Psql_access , heroku_vocabulary:Starter_Database , heroku_vocabulary:Multi_Ingress , heroku_vocabulary:PostgreSQL , heroku_vocabulary:Automatic_Health_Checks , heroku_vocabulary:Data_Clips , heroku_vocabulary:Follow , heroku_vocabulary:Production_Database .

heroku_vocabulary:Secure_Hardened_and_Tuned_Runtime
        a                skos:Concept , rdfs:Class , cloud:Security ;
        rdfs:label       "Secure Hardened and Tuned Runtime"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Secure_Hardened_and_Tuned_Runtime"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku:Offering_Heroku_Fugu_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Fugu Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Fugu_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Fugu_Database .

heroku_vocabulary:Starter_Database
        a                skos:Concept , rdfs:Class ;
        rdfs:label       "Starter Database"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Starter_Database"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:PriceComponent_Mecha_Database
        a               price:PriceComponent ;
        rdfs:label      "Mecha Database"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "6400"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:Deduction_1  a   price:Deduction ;
        rdfs:label      "Deduction 1"^^xsd:string ;
        price:hasPrice  [ a                        gr:PriceSpecification ;
                          gr:hasCurrency           "USD" ;
                          gr:hasCurrencyValue      "200"^^xsd:float ;
                          gr:hasUnitOfMeasurement  "MON"
                        ] .

heroku:PricePlan_Heroku_Ronin_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Ronin_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .

heroku_vocabulary:Instant_Deployment_And_Scalling
        a                skos:Concept , rdfs:Class , cloud:Scalability ;
        rdfs:label       "Instant deployment and scalling"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Instant_Deployment_And_Scalling"^^xsd:string ;
        skos:broader     heroku_vocabulary:heroku_concepts .

heroku_vocabulary:Direct_Psql_Access
        a                skos:Concept , rdfs:Class , cloud:Interface ;
        rdfs:label       "direct psql access"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Direct_Psql_Access"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:Offering_Heroku_Crane_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Crane Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Crane_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Crane_Database .

heroku:ServiceModel_Heroku_Dynos
        a                       usdl:ServiceModel ;
        rdfs:label              "Service Model Heroku Dynos"^^xsd:string ;
        <http://purl.org/dc/terms/title>
                "Heroku - Cloud Application Platform "@en ;
        gr:qualitativeProductOrServiceProperty
                heroku_vocabulary:Technical_Support , heroku_vocabulary:Complete_API_CLI_for_App_Management , heroku_vocabulary:Fast_And_Fault-Tolerant_HTTP_Routing , heroku_vocabulary:Platform-Wide_Monitoring_24x7 , heroku_vocabulary:Secure_Hardened_and_Tuned_Runtime , heroku_vocabulary:Instant_Deployment_And_Scalling , heroku_vocabulary:Open_and_Standard_Stacks_No_Lock-in ;
        gr:quantitativeProductOrServiceProperty
                heroku:resource_Heroku_Dynos_Availability ;
        usdl:hasClassification  cloud:PaaS ;
        usdl:hasProvider        heroku:provider_Heroku .

heroku:Offering_Heroku_Kappa_Database
        a                   usdl:ServiceOffering ;
        rdfs:label          "Offering Heroku Kappa Databases"^^xsd:string ;
        <http://purl.org/dc/terms/description>
                "Offering for Heroku Database"@en ;
        <http://purl.org/dc/terms/title>
                "Heroku database"@en ;
        usdl:includes       heroku:Service_Heroku_Kappa_Databases ;
        price:hasPricePlan  heroku:PricePlan_Heroku_Kappa_Database .

heroku_vocabulary:Production_Database
        a                skos:Concept , rdfs:Class ;
        rdfs:label       "Production Database"^^xsd:string ;
        rdfs:subClassOf  gr:QualitativeValue ;
        gr:name          "Production_Database"^^xsd:string ;
        skos:broader     heroku_vocabulary:Database .

heroku:PricePlan_Heroku_Crane_Database
        a                        price:PricePlan ;
        rdfs:label               "Price plan Heroku Databases"^^xsd:string ;
        price:hasPriceComponent  heroku:PriceComponent_Crane_Database ;
        price:hasPriceFloor      [ a                        gr:PriceSpecification ;
                                   gr:hasCurrency           "USD" ;
                                   gr:hasCurrencyValue      "0" ;
                                   gr:hasUnitOfMeasurement  "MON"
                                 ] .
